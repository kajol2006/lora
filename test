# Transmitter code for Raspberry Pi + SX1268
# Library: pySX126x (for SX1262/1268 LoRa chipsets)

import time
from sx126x import SX126x

# Initialize LoRa with SPI and GPIO pins
LoRa = SX126x(
    freq=868E6,              # Frequency (set to your region: 868E6 EU / 915E6 US / 433E6 Asia)
    bw=125E3,                # Bandwidth
    sf=7,                    # Spreading Factor (6-12)
    cr=5,                    # Coding Rate (5 = 4/5, 8 = 4/8)
    syncWord=0x12,           # Network sync word (must match Tx/Rx)
    txPower=22,              # Tx power in dBm
    preamble=8,              # Preamble length
    implicitHeader=False,    # Explicit header mode
    gpio=[7, 25, 8],         # DIO1, BUSY, RESET GPIO pins (BCM numbering, adjust as per wiring)
    spi_bus=0,
    spi_cs=0
)

print("LoRa SX1268 Transmitter Started")

try:
    counter = 0
    while True:
        msg = f"Hello from Raspberry Pi LoRa! Packet #{counter}"
        LoRa.send(bytes(msg, "utf-8"))
        print(f"[TX] Sent: {msg}")
        counter += 1
        time.sleep(2)   # Send every 2 seconds

except KeyboardInterrupt:
    print("\nTransmission stopped.")
